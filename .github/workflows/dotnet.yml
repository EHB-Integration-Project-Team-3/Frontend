# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app INTEGRATION PROJECT

on:
  push:
   branches: [ main ]
  workflow_dispatch:

    
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.301'
        
    - name: check version donet
      run: dotnet --info
 
    - name: Build with dotnet
      run: dotnet build --configuration Release
      working-directory: ./Project/Integration Project/
     
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp -r win10-x64 --self-contained false
      working-directory: ./Project/Integration Project/
      
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app
    
    - name: Create VPN connection & Connect to it
      shell: pwsh
      run: | 
       Add-VpnConnection -Name "EHB_VPN" -ServerAddress "dtsslvpn.ehb.be" -TunnelType "SSTP" -AllUserConnection -Force
       rasdial "EHB_VPN" "michael.bracke@student.ehb.be" "Rsg9y2Hpp"



    - name: ðŸ“‚ Sync files to ftp
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: 10.3.17.65
        username: administrator
        password: poi987POI
        port: 21

    - name: Run Commands via SSH To Start/Stop
      uses: Flaavius/ssh-commands@1.0
      with:
        command: dotnet "C:\inetpub\ftproot\Integration_Project\RabbitMQ Receiver.dll"
        host: 10.3.17.65
        username: administrator
        password: ${{secrets.VM_PASSWORD }}
        tryKeyboard: true





    
    
        
          
    
